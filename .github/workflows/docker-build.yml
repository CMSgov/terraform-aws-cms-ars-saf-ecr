name: docker-build

#on:
#  push:
#    branches: [master]
#  pull_request:
#    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Docker tag
        run: echo "TAG=$(date +%s)" >> "$GITHUB_ENV"
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag aws-cis-inspec-scanner:${TAG}
      - name: Test the Docker image
        run: |
          docker run --entrypoint /bin/bash aws-cis-inspec-scanner:${TAG} -c "aws --version"
          docker run --entrypoint /bin/bash aws-cis-inspec-scanner:${TAG} -c "git --version"
          docker run --entrypoint /bin/bash aws-cis-inspec-scanner:${TAG} -c "curl --version"
          docker run --entrypoint /bin/bash aws-cis-inspec-scanner:${TAG} -c "gpg --version"
          docker run --entrypoint /bin/bash aws-cis-inspec-scanner:${TAG} -c "gpg-agent --version"
          docker run --entrypoint /bin/bash aws-cis-inspec-scanner:${TAG} -c "unzip"
      - name: Configure AWS Credentials
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
        uses: aws-actions/configure-aws-credentials@v1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Push docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: cms-aws-inspec-profile
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${TAG} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${TAG}
